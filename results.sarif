{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json","version":"2.1.0","properties":{"comment":"DigitSec Security Scan Findings"},"runs":[{"tool":{"driver":{"name":"S4","version":"21Summer47","informationUri":"https://s4.digitsec.com","rules":[{"id":"SFDC_SOQL","name":"SFDC SOQL","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"SOQL Injection"},"fullDescription":{"text":"Avoid using dynamic SOQL queries with Database.query()function. To be dynamic, means that the query statement is constructed at runtime. An example of this is a query which accepts user input. This is dangerous, because the user type in a SOQL statement instead of the response you were expecting. The SOQL statement would then get directly appended to your query, allowing the user to access and/or manipulate the database. Do not use dynamic SOQL queries with Database.query() function.       "}},{"id":"SFDC_SOSL","name":"SFDC SOSL","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"SOSL Injection"},"fullDescription":{"text":"Avoid using dynamic SOSL queries with search.query(), find(), or suggest() functions. To be dynamic, means that the query statement is constructed at runtime. An example of this is a query which accepts user input. This is dangerous, because the user type in a SOSL statement instead of the response you were expecting. The SOSL statement would then get directly appended to your query, allowing the user to access and/or manipulate the data. Do not use dynamic SOSL queries with search.query(), find() or suggest() function.       "}},{"id":"SFDC_CRUD","name":"SFDC CRUD","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"CRUD violation"},"fullDescription":{"text":"User permissions should always be validated before a CRUD function is executed in Apex code. This way, if the user does not have the correct permissions for what they are trying to do, they will now be allowed to proceed.       "}},{"id":"SFDC_XSS_RFL","name":"SFDC XSS RFL","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Cross Site Scripting"},"fullDescription":{"text":"Implement calls to appropriate encoding function prior to rendering any user controlled input.       "}},{"id":"SFDC_XSS_ESCAPING","name":"SFDC XSS ESCAPING","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Cross Site Scripting due to disabled escaping"},"fullDescription":{"text":"If your web application accepts user input and it's not standard for that input to include raw HTML or Javascript code, then any content coming from the user which includes code should be filtered out. Strong type inputs where the type is known, for example, integers, urls, emails, etc       "}},{"id":"SFDC_XSS_ESCAPING_AURA","name":"SFDC XSS ESCAPING AURA","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Cross Site Scripting in lightning due to disabled escaping"},"fullDescription":{"text":"If your web application accepts user input and it's not standard for that input to include raw HTML or Javascript code, then any content coming from the user which includes code should be filtered out. Strong type inputs where the type is known, for example, integers, urls, emails, etc       "}},{"id":"SFDC_XSS_ESCAPING_LIGHTNING","name":"SFDC XSS ESCAPING LIGHTNING","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Cross Site Scripting in lightning due to disabled escaping"},"fullDescription":{"text":"If your web application accepts user input and it's not standard for that input to include raw HTML or Javascript code, then any content coming from the user which includes code should be filtered out. Strong type inputs where the type is known, for example, integers, urls, emails, etc       "}},{"id":"SFDC_WEAK_PASSWORDS_COMPLEXITY","name":"SFDC WEAK PASSWORDS COMPLEXITY","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Weak Passwords Complexity"},"fullDescription":{"text":"Require users to create complex passwords. A complex password is one which uses a mix of alpha, numeric, and special character.       "}},{"id":"SFDC_XSS_PERSIST","name":"SFDC XSS PERSIST","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Persistent or Stored Cross Site Scripting"},"fullDescription":{"text":"To prevent cross-site scripting, it is crucial to apply a context-dependent output encoding. One way to do this is, is to encode any HTML special characters, such as opening and closing tags. In other cases, URL encoding is necessary.       "}},{"id":"SFDC_WEAK_PASSWORDS_EXPIRATION","name":"SFDC WEAK PASSWORDS EXPIRATION","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Weak Passwords Expiration Settings"},"fullDescription":{"text":"Update the application's password expiration settings so that a user's password expires after 60 days. This way their password will not become stagnant and therefore predictable.       "}},{"id":"SFDC_WEAK_PASSWORDS_HISTORY","name":"SFDC WEAK PASSWORDS HISTORY","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Weak Passwords History Settings"},"fullDescription":{"text":"Enforce a stricter password history setting to ensure users do not reuse old passwords       "}},{"id":"SFDC_WEAK_LOCKOUT","name":"SFDC WEAK LOCKOUT","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Brute Force Attack"},"fullDescription":{"text":"One way to defend against brute force attacks is to temporarily lockout the user after a certain number of unsuccessful login attempts.       "}},{"id":"SFDC_WEAK_INVALID_LOGIN","name":"SFDC WEAK INVALID LOGIN","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Brute Force Attack"},"fullDescription":{"text":"One way to defend against brute force attacks is to limit the number of times a user can attempt to log in.       "}},{"id":"SFDC_WEAK_PASSWORD_LENGTH","name":"SFDC WEAK PASSWORD LENGTH","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Brute Force Attack"},"fullDescription":{"text":"Set a rule that all passwords must be 10 or more characters in length. To do this:       "}},{"id":"SFDC_WEAK_PASSWORD_SECRET","name":"SFDC WEAK PASSWORD SECRET","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Weak Authentication Control"},"fullDescription":{"text":"Set a rule so that users' password secrets cannot contain their password in it.To do this:        "}},{"id":"SFDC_CSRF_GET","name":"SFDC CSRF GET","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"Cross Site Request Forgery(CSRF) on Get Requests"},"fullDescription":{"text":"Go to Security Controls > Session Settings and select Enable CSRF protection on GET requests on non-setup pages       "}},{"id":"SFDC_CSRF_POST","name":"SFDC CSRF POST","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"Cross Site Request Forgery(CSRF) on POST Requests"},"fullDescription":{"text":"Go to Security Controls > Session Settings and select Enable CSRF protection on POST requests on non-setup pages       "}},{"id":"SFDC_CLICK_JACK_SETUP","name":"SFDC CLICK JACK SETUP","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Clickjack Attack on Setup Pages"},"fullDescription":{"text":"Ensure your set up pages are only being loaded by their own domain. The best way to do this is enable clickjack protection for set up pages in your Salesforce security controls.       "}},{"id":"SFDC_CLICK_JACK_NONSETUP","name":"SFDC CLICK JACK NONSETUP","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Clickjack Attack on Non Setup Pages"},"fullDescription":{"text":"Ensure your non setup pages are only being loaded by their own domain. The best way to do this is enable clickjack protection for non setup pages in your Salesforce security controls.       "}},{"id":"SFDC_CLICK_JACK_NONSETUP_CUSTOMER","name":"SFDC CLICK JACK NONSETUP CUSTOMER","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Clickjack Attack on Non Setup Visualforce pages"},"fullDescription":{"text":" Ensure your non setup Visualforce pages are only being loaded by their own domain. The best way to do this is enable clickjack protection for non setup Visualforce pages in your Salesforce security controls.       "}},{"id":"SFDC_WEAK_SESSION","name":"SFDC WEAK SESSION","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"Weak Session Settings"},"fullDescription":{"text":"There are a few ways to ensure strong session management in your application. One way is to set a timeout value. A timeout value is the length of time after which a system logs out inactive users. You can set your timeout value to be anything from 15 minutes to 24 hours. The shorter the timeout value, the more secure the session will be. When a user's session times out, there should also be a force lockout feature in place to ensure a hacker can not gain access to the account.       "}},{"id":"SFDC_WEAK_CACHING","name":"SFDC WEAK CACHING","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"Weak CACHING Settings"},"fullDescription":{"text":"While many applications cache their users' passwords and other login information, it's safer not to. This provides one extra layer of protection between a user's credentials and hackers.       "}},{"id":"SFDC_LIGHTNING_INSTANCEOF","name":"SFDC LIGHTNING INSTANCEOF","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"instanceof Lightning"},"fullDescription":{"text":"Use built in JavaScript or Lightning components utility functions. For example: Array.isArray(foo) or $A.util.isPlainObject(foo)       "}},{"id":"SFDC_LIGHTNING_AURA","name":"SFDC LIGHTNING AURA","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Insecure Aura API"},"fullDescription":{"text":"Only make calls which are available in $A.util. For example, you shouldn't make the following call: $A.util.fake(); since fake() is not in $A.util.       "}},{"id":"SFDC_LIGHTNING_DOCUMENT","name":"SFDC LIGHTNING DOCUMENT","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Insecure document object"},"fullDescription":{"text":"When developing Lightning Components and Aura Components, always use the secure version of the document object (SecureDocument). If a Lightning web component and an Aura component belong to the same namespace, they share the same SecureDocument instance.       "}},{"id":"SFDC_LIGHTNING_WINDOW","name":"SFDC LIGHTNING WINDOW","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Insecure window object"},"fullDescription":{"text":"When developing Lightning Components and Aura Components, always use the secure version of the window object (SecureWindow). If a Lightning web component and an Aura component belong to the same namespace, they share the same SecureWindow instance.       "}},{"id":"SFDC_INSECURE_API","name":"SFDC INSECURE API","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Insecure Integration API"},"fullDescription":{"text":"Make sure that data is only being passed between HTTPS sessions. HTTPS sessions are more secure than HTTP sessions, because they contain an SSL certificate which creates a secure, encrypted connection between a web browser and a web server. To do this, enable protocol security for the API in question.       "}},{"id":"SFDC_HTTP_API","name":"SFDC HTTP API","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"API uses HTTP"},"fullDescription":{"text":"All API URLs should be HTTPs, not HTTP. HTTPS have an SSL certificate which creates a secure, encrypted connection between the web server and the web browser.       "}},{"id":"SFDC_INSECURE_CSP","name":"SFDC INSECURE CSP","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"CSP Settings uses HTTP"},"fullDescription":{"text":"All CSP Trusted Sites should be set to HTTPS protocol. This will ensure that data is only being passed between HTTPS sessions and not HTTP sessions.       "}},{"id":"SFDC_INSECURE_CORS","name":"SFDC INSECURE CORS","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"CORS Settings uses HTTP"},"fullDescription":{"text":"Your CORS settings should be set to the secure (HTTPS) protocol.       "}},{"id":"SFDC_3RDPARTY_API","name":"SFDC 3RDPARTY API","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Review Third parties with access to your SFDC"},"fullDescription":{"text":"Review each of the APIs, URLs, and end points above to ensure that these are authorized vendors who need access to your environment. If any of the third-parties do not need access to your SFDC, remove them as authorized vendors. In addition, if you do not understand the type of data these vendors can access, then review these connections and the need to grant them access to your environment. It's also a security best practice to document these end points as external entities whose security should be reviewed as part of vendor assessments.       "}},{"id":"SFDC_CSRF","name":"SFDC CSRF","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Cross Site Request Forgery(CSRF)"},"fullDescription":{"text":"Do not invoke server-side DML controller method as onInit handlers or afterRender handlers.       "}},{"id":"SFDC_OPEN_REDIRECT","name":"SFDC OPEN REDIRECT","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Open Redirect Vulnerability"},"fullDescription":{"text":"Avoid redirecting users based on parameters which are controlled by users or supplied through a GET method. If redirecting is unavoidable, the redirect target should be validated and sanitized using a whitelist of approved URLs       "}},{"id":"SFDC_VF_OPEN_REDIRECT","name":"SFDC VF OPEN REDIRECT","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Open Redirect Vulnerability"},"fullDescription":{"text":"Avoid redirecting users based on parameters which are controlled by users or supplied through a GET method. If redirecting is unavoidable, the redirect target should be validated and sanitized using a whitelist of approved URLs       "}},{"id":"SFDC_WEAK_CRYPTO","name":"SFDC WEAK CRYPTO","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Use of Weak Cryptography"},"fullDescription":{"text":"Strengthen/stretch your keys to make them difficult to guess. This can be done by performing multiple processes on a key. For example, you could hash a password, then hash the hash of the password, then hash the hash the hash of the password, and so on.       "}},{"id":"SFDC_SHARING","name":"SFDC SHARING","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Sharing violation"},"fullDescription":{"text":"Use the with sharing keyword when defining an Apex class. This directs the platform to use the security sharing permissions of the user currently logged in, rather than granting full access to all records.       "}},{"id":"Vulnerable_Software","name":"Vulnerable Software","defaultConfiguration":{"level":"note"},"shortDescription":{"text":""},"fullDescription":{"text":"Follow the guidelines in the below links:         "}},{"id":"SFDC_INSECURE_SOCKET","name":"SFDC INSECURE SOCKET","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Insecure usage of Web Sockets"},"fullDescription":{"text":"Change ws:// to use wss:// (Secure Web Sockets).       "}},{"id":"Vulnerable_Software_angularjs","name":"Vulnerable Software angularjs","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for AngularJS using the following link: https://code.angularjs.org/snapshot-stable/angular.js The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_backbone.js","name":"Vulnerable Software backbone.js","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for backbone.js using the following link: https://backbonejs.org/backbone.js The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_bootstrap","name":"Vulnerable Software bootstrap","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for bootstrap using the following link: https://getbootstrap.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_ckeditor","name":"Vulnerable Software ckeditor","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for ckeditor using the following link: https://ckeditor.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_dojo","name":"Vulnerable Software dojo","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for dojo using the following link: https://dojotoolkit.org/download/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_DOMPurify","name":"Vulnerable Software DOMPurify","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for DOMPurify using the following link: https://github.com/cure53/DOMPurify The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_DWR","name":"Vulnerable Software DWR","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for DWR using the following link: http://directwebremoting.org/dwr/index.html The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_easyXDM","name":"Vulnerable Software easyXDM","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for easyXDM using the following link: https://easyxdm.net/wp/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_ember","name":"Vulnerable Software ember","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for ember using the following link: https://emberjs.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_ExtJS","name":"Vulnerable Software ExtJS","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for ExtJS using the following link: https://www.extjs.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_flowplayer","name":"Vulnerable Software flowplayer","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for flowplayer using the following link: https://flowplayer.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_handlebars.js","name":"Vulnerable Software handlebars.js","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for handlebars.js using the following link: https://handlebarsjs.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_jPlayer","name":"Vulnerable Software jPlayer","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for jPlayer using the following link: http://jplayer.org/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_jquery","name":"Vulnerable Software jquery","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for jquery using the following link: https://jquery.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_jquery-migrate","name":"Vulnerable Software jquery-migrate","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for jquery-migrate using the following link: https://github.com/jquery/jquery-migrate The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_jquery-mobile","name":"Vulnerable Software jquery-mobile","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for jquery-mobile using the following link: https://jquerymobile.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_jquery-ui-dialog","name":"Vulnerable Software jquery-ui-dialog","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for jquery-ui-dialog using the following link: https://jqueryui.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_jquery-ui-tooltip","name":"Vulnerable Software jquery-ui-tooltip","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for jquery-ui-tooltip using the following link: https://jqueryui.com/tooltip/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_jquery.prettyPhoto","name":"Vulnerable Software jquery.prettyPhoto","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for jquery.prettyPhoto using the following link: https://github.com/scaron/prettyphoto The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_knockout","name":"Vulnerable Software knockout","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for knockout using the following link: https://knockoutjs.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_moment.js","name":"Vulnerable Software moment.js","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for moment.js using the following link: https://momentjs.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_mustache.js","name":"Vulnerable Software mustache.js","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for mustache.js using the following link: https://mustache.github.io/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_plupload","name":"Vulnerable Software plupload","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for plupload using the following link: https://www.plupload.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_prototypejs","name":"Vulnerable Software prototypejs","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for prototypejs using the following link: http://prototypejs.org/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_react","name":"Vulnerable Software react","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for react using the following link: https://reactjs.org/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_sessvars","name":"Vulnerable Software sessvars","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for sessvars using the following link: https://gist.github.com/LC2010/594793 The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_swfobject","name":"Vulnerable Software swfobject","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for swfobject using the following link: https://github.com/swfobject/swfobject The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_tinyMCE","name":"Vulnerable Software tinyMCE","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for tinyMCE using the following link: https://www.tiny.cloud/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_vue","name":"Vulnerable Software vue","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for vue using the following link: https://github.com/vuejs The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"Vulnerable_Software_YUI","name":"Vulnerable Software YUI","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":""},"fullDescription":{"text":"Download the latest stable build for YUI using the following link: https://yuilibrary.com/ The following links give details about this issue:  The following links give details about this issue:     "}},{"id":"SDFC_CSRF_AURA","name":"SDFC CSRF AURA","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Cross Site Request Forgery(CSRF)"},"fullDescription":{"text":"Do not invoke server-side DML controller method as init Aura handler.       "}},{"id":"SFDC_SELFSIGNED_CERT","name":"SFDC SELFSIGNED CERT","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Self Signed Certificates "},"fullDescription":{"text":"Use certificates issued by a signing authority.       "}},{"id":"SFDC_Insecure_Apex_Endpoint","name":"SFDC Insecure Apex Endpoint","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Insecure Apex Endpoint"},"fullDescription":{"text":"All API URLs should be HTTPs, not HTTP. HTTPS have an SSL certificate which creates a secure, encrypted connection between the web server and the web browser.       "}},{"id":"SFDC_EXPIRED_CERT","name":"SFDC EXPIRED CERT","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Expired Certificate "},"fullDescription":{"text":"Renew expired certificates.       "}},{"id":"SFDC_Apex_Escalation_Priv","name":"SFDC Apex Escalation Priv","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Escalation of Privileges"},"fullDescription":{"text":"User permissions should always be validated before a CRUD function is executed in Apex code. This way, if the user does not have the correct permissions for what they are trying to do, they will now be allowed to proceed.       "}},{"id":"SFDC_Apex_Password_Manipulation","name":"SFDC Apex Password Manipulation","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Password Manipulation"},"fullDescription":{"text":"Do not set user passwords using static strings.       "}},{"id":"SFDC_HTML_UPLOAD","name":"SFDC HTML UPLOAD","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"HTML Upload"},"fullDescription":{"text":"Do not allow HTML uploads if there is no use case for it to protect your Salesforce users       "}},{"id":"SFDC_GUEST_ACCESS","name":"SFDC GUEST ACCESS","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Objects Exposed Externally"},"fullDescription":{"text":"Review all the objects that have external access enabled and make the internal objects private.       "}},{"id":"SFDC_GUEST_APEX","name":"SFDC GUEST APEX","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Custom Code Exposed on the Internet"},"fullDescription":{"text":"Review all the custom code that has been given guest access and remove the internal code from being exposed on the internet.       "}},{"id":"SFDC_OBSECURE_SECRET","name":"SFDC OBSECURE SECRET","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Secret Answers not Protected"},"fullDescription":{"text":"One way to defend against this attack is to hide the answers to secret questions.       "}},{"id":"SFDC_ENABLE_SMSIDENTITY","name":"SFDC ENABLE SMSIDENTITY","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"2FA Verification using SMS not enabled"},"fullDescription":{"text":"One way to defend against two-factor authentication attacks is to use out of band communications such as SMS text messages.       "}},{"id":"SFDC_CLICKJACK_HEADERLESS","name":"SFDC CLICKJACK HEADERLESS","defaultConfiguration":{"level":"warning"},"shortDescription":{"text":"Clickjack Attack on Headerless pages not enabled"},"fullDescription":{"text":"Ensure your headerless pages are only being loaded by their own domain. The best way to do this is enable clickjack protection for headerless pages in your Salesforce security controls.       "}},{"id":"SFDC_ENABLE_XSS","name":"SFDC ENABLE XSS","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"XSS Protection not enabled"},"fullDescription":{"text":"One way to defend against XSS is by enabling XSS protection in Salesforce.       "}},{"id":"SFDC_FORCE_LOGOUT","name":"SFDC FORCE LOGOUT","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"Force Logout at Session Expiration not enabled"},"fullDescription":{"text":"One way to defend against this attack is to force logout when a session expires.       "}},{"id":"SFDC_IDENTITY_CONFIRMATION","name":"SFDC IDENTITY CONFIRMATION","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"Identity Confirmation Disabled"},"fullDescription":{"text":"One way to defend against this risk is to validate identities upon change in email addresses.       "}},{"id":"SFDC_2FA_REGISTRATION","name":"SFDC 2FA REGISTRATION","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"2FA Identity Valdation not enabled"},"fullDescription":{"text":"One way to defend against brute force attacks and credential stuffing is to use Two-factor authentication .       "}},{"id":"SFDC_REDIRECT_WARNING","name":"SFDC REDIRECT WARNING","defaultConfiguration":{"level":"note"},"shortDescription":{"text":"Lack of Redirect Warning"},"fullDescription":{"text":"One way to defend against this attack is by warning users when they are being redirected outside of your Salesforce domain.       "}},{"id":"SFDC_GUEST_DATA_BREACH_WARNING","name":"SFDC GUEST DATA BREACH WARNING","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Potential Data Breach Detected"},"fullDescription":{"text":"One way to defend against this attack is by removing guest access sharing rules from the Saleforce instance.       "}},{"id":"SFDC_GUEST_DATA_BREACH","name":"SFDC GUEST DATA BREACH","defaultConfiguration":{"level":"error"},"shortDescription":{"text":"Data Breach Detected"},"fullDescription":{"text":"One way to defend against this attack is by removing guest access sharing rules from the Saleforce instance.       "}}]}},"results":[]}]}